[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"
config.hostInfo = "helix"
config.validate = "on"
config.experimental = { useFlatConfig = true}
config.rulesCustomizations = []
config.run = "onType"
config.problems = { shortenToSingleLine = false }
config.nodePath = ""

[language-server.eslint.config.codeAction]
disableRuleComment.enable = true
disableRuleComment.location = "separateLine"
showDocumentation.enable = true

[language-server.eslint.config.codeActionOnSave]
enable = true
mode = "fixAll"

[language-server.eslint.config.workingDirectory]
mode = "location"

[[language]]
name = "typescript"
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript" ] }
auto-format = true

[[language]]
name = "javascript"
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript" ] }
auto-format = true

[[language]]
name = "jsx"
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript" ] }
auto-format = true

[[language]]
name = "tsx"
language-servers = [{except-features = ["format"], name = "typescript-language-server"}, "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript" ] }
auto-format = true

[[language]]
name = "json"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "json" ] }

[[language]]
name = "markdown"
formatter = { command = 'prettier', args = ["--parser", "markdown" ] }
auto-format = true

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css" ] }
auto-format = true

[[language]]
name = "scss"
formatter = { command = 'prettier', args = ["--parser", "scss" ] }
auto-format = true

[[language]]
name = "bash"
formatter = { command = 'shfmt', args = ["-i", "2"] }
auto-format = true

[[language]]
name = "fish"
formatter = { command = "fish_indent" }
auto-format = true

[[language]]
name = "python"
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true

[[language]]
name = "rust"
auto-format = true
